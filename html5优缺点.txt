a、网络标准统一、HTML5本身是由W3C推荐出来的。

          b、多设备、跨平台 

          c、即时更新。

          d、提高可用性和改进用户的友好体验；

          e、有几个新的标签，这将有助于开发人员定义重要的内容； 

          f、可以给站点带来更多的多媒体元素(视频和音频)；  

          g、可以很好的替代Flash和Silverlight；

          h、涉及到网站的抓取和索引的时候，对于SEO很友好； 

          i、被大量应用于移动应用程序和游戏。 



劣势：

          a、安全：像之前Firefox4的web socket和透明代理的实现存在严重的安全问题，同时web storage、web socket 这样的              功能很容易被黑客利用，来盗取用户的信息和资料。 

          b、完善性：许多特性各浏览器的支持程度也不一样。 

          c、技术门槛：HTML5简化开发者工作的同时代表了有许多新的属性和API需要开发者学习，像web worker、web socket、              web storage 等新特性，后台甚至浏览器原理的知识，机遇的同时也是巨大的挑战 

          d、性能：某些平台上的引擎问题导致HTML5性能低下。 

          e、浏览器兼容性：最大缺点，IE9以下浏览器几乎全军覆没。
		  
		  
第一大原因： 它是未来，开始用吧！

　　最大的原因今天你就开始使用HTML5是因为它是未来，不要掉队了！HTML5不会往每个方向发展，但是更多的元素已经被很多公司采用，并且开始着手开发。HTML5其实更像HTML，它不是一个新的技术需要你重新学习！如果你开发XHTML strict的话你现在就已经在开发HTML5了。为什么不更完整的享受HTML5的功能呢？

你实际上没有任何借口不接受HTML5。事实上我唯一一个原因使用HTML5是因为它书写代码简单清晰。其它的特性其实我也没有真正使用。你可以考虑现在开始使用HTML5书写代码，它能帮助你改变书写代码的方式及其设计方式。开始用HTML5代码编写web应用吧，说不定下一个移动应用或者游戏应用就是用HTML5开发的！

　第二大原因： 移动，移动还是移动

　　你可以称之为“直觉”，但是我认为移动技术将会变得更加的流行。我知道，这里有些非常疯狂的猜测，有些可能你也想到了– Mobile是一个时尚！移动设备将占领世界。更多的接受移动设备将会增长的非常迅速。这意味着更多的用户会选择使用移动设备访问网站或者web应用。HTML5是最移动化的开发工具。随着Adobe宣布放弃移动flash开发，你将会考虑使用HTML5来开发webp应用。当手机浏览器完全支持HTML5那么开发移动项目将会和设计更小的触摸显示一样简单。这里有很多的meta标签允许你优化移动：viewport: 允许你定义viewport宽度和缩放设置；全屏浏览器： ISO指定的数值允许Apple设备全屏模式显示；Home screen icons:  就像桌面收藏，这些图标可以用来添加收藏到IOS和Android移动设备的首页。

第三大原因：遗留及其跨浏览器支持

　　你的现代流行浏览器都支持HTML5（Chrome，Firefox，Safari，IE9和Opera），并且创建了HTML5 doctype这样所有的浏览器，即使非常老非常令人厌恶浏览器像IE6都可以使用。但是因为老的浏览器能够识别doctype并不意味它可以处理HTML5标签和功能。幸运的是，HTML5已经使得开发更加简单了，更多支持更多浏览器，这样老的IE浏览器可以通过添加javascript代码来使用新的元素：

<!--[iflt IE 9]> <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

第四大原因：游戏开发

　　没错， 你可以使用HTML5的<canvas>开发游戏。HTML5提供了一个非常伟大的，移动友好的方式去开发有趣互动的游戏。如果你开发Flash游戏，你就会喜欢上HTML5的游戏开发。

　　Script-tutorials目前提供了4个不部分的HTML5游戏开发教程，这里看看他们开发的有趣游戏：

   HTML5 Gaming Development Lesson One

   HTML5 Gaming Development Lesson Two

   HTML5 Gaming Development Lesson Three

   HTML5 Gaming Development Lesson Four

　　　第五大原因：更好的互动

　　我们都喜欢更好的互动，我们都喜欢对于用户有反馈的动态网站，用户可以享受互动的过程。输入<canvas>，HTML5的画图标签允许你做更多的互动和动画，就像我们使用Flash达到的效果。

　　除了<canvas>，HTML5同样也拥有很多API允许你创建更加好的用户体验并且更加动态的web应用程序。 这里有一个列表：

   Drag and Drop (DnD)

   Offline storage database

   Browser history management

   document editing

   Timed media playback

　　　第六大原因：更聪明的存储

　　HTML5中最酷的特性就是本地存储。有一点像比较老的技术cookie和客户端数据库的融合。它比cooke更好用因为支持多个windows存储，它拥有更好的安全和性能，即使浏览器关闭后也可以保存。

　　因为它是个客户端的数据库，你不用担心用户删除任何cookie，并且所有主流浏览器都支持。

　　本地存储对于很多情况来说都不错，它是HTML5工具中一个不需要第三方插件实现的。能够保存数据到用户的浏览器中意味你可以简单的创建一些应用特性例如：保存用户信息，缓存数据，加载用户上一次的应用状态。

　第七大原因：更清晰的代码

　　如果你对于简答，优雅，容易阅读的代码有所偏好的话，HTML5绝对是一个为你量身定做的东西。HTML5允许你写出简单清晰富于描述的代码。符合语义学的代码允许你分开样式和内容。看看这个典型的简单拥有导航的heaer代码：<div id="header"><h1>Header Text</h1> <div id="nav"> <ul>   <li><ahref="#">Link</a></li>   <li><ahref="#">Link</a></li>   <li><ahref="#">Link</a></li>  </ul></div></div>是不是很简单？但是使用HTML5后会使得代码更加简单并且富有含义：<header> <h1>Header Text</h1> <nav> <ul>   <li><ahref="#">Link</a></li>   <li><ahref="#">Link</a></li>   <li><ahref="#">Link</a></li>  </ul></nav></header>

　　使用HTML5你可以通过使用语义学的HTML header标签描述内容来最后解决你的div及其class定义问题。 以前你需要大量的使用div来定义每一个页面内容区域，但是使用新的<section>，<article>，<header>，<footer>，<aside>和<nav>标签，需要你让你的代码更加清晰易于阅读。

　第八大原因：Doctype

　　没错，就是doctype，没有更多内容了。是不是非常简答？不需要拷贝粘贴一堆无法理解的代码，也没有多余的head标签。最大的好消息在于，除了简单，它能在每一个浏览器中正常工作即使是名声狼藉的IE6。

　第九大原因：视频和音频支持

　　忘了flash和其它第三方应用吧，让你的视频和音频通过HTML5标签<video>和<audio>来访问资源。正确播放媒体一直都是一个非常可怕的事情，你需要使用<embed>和<object>标签，并且为了它们能正确播放必须赋予一大堆的参数。你的媒体标签将会非常复杂，大堆得令人迷惑的代码。而且HTML5视频和音频标签基本将他们视为图片：<video src=”"/>。但是其它参数例如宽度和高度或者自动播放呢？不必担心，只需要像其它HTML标签一样定义：<video src=”url”width=”640px” height=”380px” autoplay/>。

　　实际上这个过程非常简单，然而我们的老浏览器可能并不喜欢我们的HTML5，你需要添加更多代码来让他们正确工作。但是这个代码还是比<embed>和<object>来的简单的多。		  